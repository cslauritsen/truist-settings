# Reference this file from your ~/.gitconfig like so:
#[include]
#	path = path/to/this/file

[user]
	name = Nathan Arthur
# set this in your ~/.gitconfig
#	email = your@email

[alias]

	# basic verbs that should exist

	branches = branch -a
	remotes = remote -v
	st = status -s
	sync = "!f() { git pull && git push ; }; f"
	tags = for-each-ref --format='%(color:green)%(*creatordate:short)%(committerdate:short) %(color:red)%(objectname:short) %(color:reset)%(refname:short) %(color:blue)(%(taggerdate:short))' --sort=-taggerdate refs/tags
	wdiff = diff --color-words
	wshow = show --color-words

	# workspace management

	cleanall = clean -d -x -f
	ignored = status --ignored -s
	undo-commit = reset --soft HEAD^
	unedit = checkout HEAD --
	unstage = reset --
	untrack = rm --cached

	# history examination

	contributors = shortlog --summary --numbered
	graph = log --color --graph --pretty='format:%C(red)%h %C(yellow)%d%C(reset) %s  %C(green)%an, %ad%C(reset)' --date=short
	search = "!f() { git log -p -G\"$1\" -i ; }; f"
	#search = "!f() { git log -p -G\"$1\" --diff-filter=M ; }; f"

	# rare but handy

	camend = commit --amend --no-edit
	dump = cat-file -p
	master-to-new-branch = "!master-to-new-branch"
	oldest-ancestor = !bash -c 'diff --old-line-format= --new-line-format= <(git rev-list --first-parent \"${1:-master}\") <(git rev-list --first-parent \"${2:-HEAD}\") | head -1' -		# from http://stackoverflow.com/questions/1527234/finding-a-branch-point-with-git
	prune-stale-branches = remote prune origin
	stashpull = "!f() { git stash && git pull && git stash pop ; }; f"
	trackedignored = ls-files -i --exclude-standard		# find files that are .gitignore'd but are already tracked

[branch]
	autosetuprebase = always

[color]
	ui = true
[color "diff"]
	meta = yellow

[core]
# uncomment these on windows
#	autocrlf = true
#	fscache = true
	excludesfile = ~/.gitignore
	longpaths = true
	pager = less -i -S

	# Make `git rebase` safer on OS X
	# More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
	trustctime = false

# pick one of these, depending on OS
#[credential]
#	helper = cache
#	helper = osxkeychain
#	helper = manager

[fetch]
	prune = true

[log]
	date = relative

[merge]
	# Include summaries of merged commits in newly created merge commit messages
	log = true
	tool = vimdiff

[pull]
	rebase = true

[push]
	default = current

# also see https://github.com/git/git/blob/master/contrib/rerere-train.sh
[rerere]
	enabled = false

