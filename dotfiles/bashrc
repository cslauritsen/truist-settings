
# to use this on a host, add this to the top of the host's .bashrc or .profile:
# . ~/code/settings/dotfiles/bashrc

if [ `/usr/bin/id -u` -eq 0 ] && [ -d /root ] && [ -n "$(find /root -user "root" -print -prune -o -prune 2>/dev/null)" ]; then
	export HOME=/root
elif [ `/usr/bin/id -u` -eq 0 ] && [ -d /var/root ] && [ -n "$(find /var/root -user "root" -print -prune -o -prune 2>/dev/null)" ]; then
	export HOME=/var/root
fi

_check_path_ownership() {
	[ -d "$1" ] && [ -n "$(find "$1" -user "$2" -print -prune -o -prune 2>/dev/null)" ]
}

ORIG_PATH=$PATH
PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/X11R7/bin:/usr/X11R6/bin
PATH=${PATH}:/usr/local/bin:/usr/local/sbin
# pkgin on osx, probably
if _check_path_ownership /opt/pkg/bin root ; then
	PATH=/opt/pkg/bin:/opt/pkg/sbin:${PATH}
fi
# standard pkgsrc
if _check_path_ownership /usr/pkg/bin root ; then
	PATH=/usr/pkg/bin:/usr/pkg/sbin:${PATH}
fi
# user-specific pkgsrc
if _check_path_ownership "$HOME/pkg/bin" "$(id -u)" ; then
	PATH=$HOME/pkg/bin:$HOME/pkg/sbin:${PATH}
fi
if echo `uname` | grep -E ^MINGW > /dev/null ; then
	PATH=${PATH}:$ORIG_PATH
fi
PATH=$HOME/bin:${PATH}
export PATH
#export MANPATH

# also add these two lines to /root/.profile (for e.g. 'sudo -i crontab -e')
export EDITOR=vim
alias vi=vim

alias ls='ls -F'

export PAGER=less
alias less='less -R -X'
alias ack='ack --pager="less -R -X" -a'
alias ag='ag --pager "less -R -X"'

alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."

alias cdp=". ~/bin/cdp"

# http://www.shellperson.net/using-sudo-with-an-alias/   (fixes "sudo vi <whatever>" not using vim)
alias sudo='sudo '

alias notify='tput bel'

command -v grunt > /dev/null && alias grunt="grunt --stack"

export HISTIGNORE="clear:bg:fg:cd:cd -:exit:date:w:pwd"
# type something then hit up/down to search history that matches what you already have
if tty -s; then
	bind '"\e[A": history-search-backward'
	bind '"\e[B": history-search-forward'
fi

if [ -f ~/.prompt_spec ]; then
	. ~/.prompt_spec
elif [ `/usr/bin/id -u` == 0 ]; then
	# red
	export PS1="\[\e[0;31m\][\u@\h \W]$ \[\e[m\]"
else
	# green
	export PS1="\[\e[0;32m\][\u@\h \W]$ \[\e[m\]"
fi

if [ -f ~/.git-completion.bash ]; then
	. ~/.git-completion.bash
fi

# mosh sets this to en_US.UTF-8, which makes perl angry, so do this on mosh servers, if necessary
#unset LANG

export PERL_CPANM_OPT="-v -S"

if ( command -v tty >/dev/null ) && ( tty -s ) && [ -x /usr/games/fortune ]; then
	/usr/games/fortune
fi

export NOTEDIR="$HOME/OneDrive/Scratch"
if [ -d "$NOTEDIR" ]; then
	_noteComplete() {
		local files=("$NOTEDIR/$2"*)
		[[ -e ${files[0]} ]] && COMPREPLY=( "${files[@]##*/}" )
	}
	complete -o bashdefault -o default -o filenames -F _noteComplete note
fi

export INTERVIEWDIR="$HOME/OneDrive/People/Hiring/Candidates"
if [ -d "$INTERVIEWDIR" ]; then
	_interviewComplete() {
		local files=("$INTERVIEWDIR/$2"*.txt)
		[[ -e ${files[0]} ]] && COMPREPLY=( "${files[@]##*/}" )
	}
	complete -o bashdefault -o default -o filenames -F _interviewComplete interview
fi

export SLIDESDIR="$HOME/src/reveal.js/slides"
if [ -d "$SLIDESDIR" ]; then
	_slidesComplete() {
		local files=("$SLIDESDIR/$2"*)
		[[ -e ${files[0]} ]] && COMPREPLY=( "${files[@]##*/}" )
	}
	complete -o bashdefault -o default -o filenames -F _slidesComplete slides
fi

# see https://github.com/rupa/z
ZPATH=~/src/z/z.sh
if [ -e $ZPATH ]; then
	. $ZPATH
fi

alias gitjk="history 10 | tail -r | gitjk_cmd"

