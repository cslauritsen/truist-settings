#!/usr/bin/env bash

P_ESC_PRE='\[\e['
P_ESC_POST='\]'
P_ESC_RESET="${P_ESC_PRE}m${P_ESC_POST}"

P_PLAIN="0;"
P_BOLD="1;"
P_HILITE="3;"
P_UNDERLINE="4;"
P_BLINK="5;"

P_GREY="29M"
P_BLACK="30m"
P_RED="31m"
P_GREEN="32m"
P_YELLOW="33m"
P_BLUE="34m"
P_VIOLET="35m"
P_AQUA="36m"
P_WHITE="37m"

P_PLAIN_GREEN="$P_ESC_PRE$P_PLAIN$P_GREEN$P_ESC_POST"
P_UNDERLINE_YELLOW="$P_ESC_PRE$P_UNDERLINE$P_YELLOW$P_ESC_POST"
P_PLAIN_YELLOW="$P_ESC_PRE$P_PLAIN$P_YELLOW$P_ESC_POST"
P_UNDERLINE_RED="$P_ESC_PRE$P_UNDERLINE$P_RED$P_ESC_POST"
P_PLAIN_RED="$P_ESC_PRE$P_PLAIN$P_RED$P_ESC_POST"

if echo `uname` | grep -E ^MINGW > /dev/null ; then
	ME=$USERNAME
else
	ME=`whoami`
fi
if [ "`/usr/bin/id -u`" == 0 ]; then
	USER_COLOR=$P_PLAIN_RED
	PROMPT_CHAR='#'
	SELF=0
elif [ "truist" == "$ME" ] || [ "narthur" == "$ME" ] || [ "NArthur" == "$ME" ] || [ "preint\\narthur" == "$ME" ]; then
	USER_COLOR=$P_PLAIN_GREEN
	PROMPT_CHAR='$'
	SELF=1
else
	USER_COLOR=$P_PLAIN_YELLOW
	PROMPT_CHAR='%'
	SELF=0
fi

if [ -z "$SSH_CLIENT" ]; then
	if [ "1" == "$SELF" ]; then
		HOST_COLOR=$P_PLAIN_GREEN
	else
		# the SSH_CLIENT var won't survive a 'sudo', so we can't be sure if we're local
		HOST_COLOR=$P_PLAIN_RED
	fi
else
	HOST_COLOR=$P_PLAIN_YELLOW
fi

if echo `uname` | grep -E ^Darwin > /dev/null ; then
	ME_HOST=`scutil --get ComputerName`
else
	ME_HOST="\h"
fi

BIT_COLOR=$P_PLAIN_GREEN

if echo `uname` | grep -E ^MINGW > /dev/null ; then
	ME_HOMEDIR=$HOME
else
	ME_HOMEDIR=`eval echo ~\`whoami\`` > /dev/null
fi
get_path_color() {
	if echo "$PWD" | grep -E ^$ME_HOMEDIR > /dev/null ; then
		echo "$P_PLAIN$P_GREEN"
	else
		echo "$P_PLAIN$P_YELLOW"
	fi
}

get_git_branch_if_branch() {
	git branch --no-color 2>/dev/null | sed -e '/^[^*]/d' | sed -e 's/* \(.*\)/\1/'
}

wrap_result() {
	if [ -n "$1" ]; then
		PREFIX=$2
		[ -n "$PREFIX" ] || PREFIX='('
		SUFFIX=$3
		[ -n "$SUFFIX" ] || SUFFIX=')'

		echo "$PREFIX$1$SUFFIX"
	fi
}

#show_git_branch_if_branch() {
#	wrap_result "$(get_git_branch_if_branch)" "$@"
#}

show_git_branch_if_not_master() {
	BRANCH=$(get_git_branch_if_branch)
	if [ -n "$BRANCH" ] && [ "master" != "$BRANCH" ]; then
		wrap_result "$BRANCH" "$@"
	fi
}

HAVE_GIT_PROMPT=0
if [ -f ~/.git-prompt.sh ]; then
	source ~/.git-prompt.sh
fi
if [ "`type -t __git_ps1`" == "function" ]; then
# disabling this entirely, for now - I don't think I want it
#	HAVE_GIT_PROMPT=1

	# these next two are slow on large repos; turn them off per-repo as shown in each comment
	GIT_PS1_SHOWDIRTYSTATE=1	# git config bash.showDirtyState false
	GIT_PS1_SHOWUNTRACKEDFILES=1	# git config bash.showUntrackedFiles false

	GIT_PS1_SHOWSTASHSTATE=1
	GIT_PS1_SHOWUPSTREAM="auto verbose"
	GIT_PS1_DESCRIBE_STYLE="default"
fi

do_git() {
	if [ 1 -eq $HAVE_GIT_PROMPT ]; then
		__git_ps1 ":%s"
	else
		show_git_branch_if_not_master "$@"
	fi
}
get_branch_color() {
	BRANCH=$(get_git_branch_if_branch)
	if [ -n "$BRANCH" ] && [ "master" == "$BRANCH" ]; then
		echo "$P_PLAIN$P_BLUE"
	else
		echo "$P_PLAIN$P_YELLOW"
	fi
}


# set the terminal title
if [ "$TERM" == "vt100" ]; then
	PS1=""
else
	PS1="\[\033]0;\u@$ME_HOST:\w\007\]"
fi

PS1+="\n"
PS1+="$BIT_COLOR["
PS1+="$USER_COLOR\u"
PS1+="$BIT_COLOR@"
PS1+="$HOST_COLOR$ME_HOST"
PS1+="$BIT_COLOR "
PS1+="$P_ESC_PRE\$(get_path_color)$P_ESC_POST\W"
PS1+="$P_ESC_PRE\$(get_branch_color)$P_ESC_POST\$(do_git ':' $P_ESC_RESET)"
PS1+="$BIT_COLOR]"
PS1+="\n"
PS1+="$USER_COLOR$PROMPT_CHAR $P_ESC_RESET"

export PS1

#if [ "$TERM" == "screen" ] || [ "$TERM" == "screen-256color" ] ; then
	# make tmux show $PWD in the status line
#	export PROMPT_COMMAND="echo -ne \"\\033]0;\${USER}@${HOSTNAME}\\007\\033k\${PWD}\\033\\\\\""
#fi

