#!/usr/bin/env bash

GIT=git

SECOND_FILE=
if [ "-o" == "$1" ]; then
	SECOND_FILE=$3
	shift
elif [ "-s" == "$1" ]; then
	SEARCH_ONLY=1
	shift
fi

if [ -z "$1" ]; then
	echo "Must specify a file from within the current git repo" 1>&2
	exit 1;
fi

SEEK=$1

WORKTREE_ROOT=
if git rev-parse --show-toplevel >/dev/null ; then
	WORKTREE_ROOT=`git rev-parse --show-toplevel`
else
	echo "You must be within a git work tree" >&2
	exit 1;
fi

cd $WORKTREE_ROOT
FIND_COMMAND='find . -path "./.git" -prune -o -type f -path "*$SEEK*" -print0'

file_list=()
while IFS= read -d $'\0' -r file ; do
	file_list=("${file_list[@]}" "$file")
done < <(eval ${FIND_COMMAND})

if [ "1" == "$SEARCH_ONLY" ]; then
	printf '%s\n' "${file_list[@]}"
	exit 0;
elif [ -f $SEEK ]; then
	FOUND=$SEEK
else
	if [ -z "${file_list[*]}" ]; then
		echo "Can't find '$SEEK' or '`pwd`/$SEEK' or anything matching '*$SEEK*' in '`pwd`'" 1>&2
		exit 2;
	fi
fi

printf '%s\n' "${file_list[@]}"
$EDITOR -o "${file_list[@]}" $SECOND_FILE

