#!/bin/sh

set -eu

WORK_DIR=/var/pkg_comp

LOG=$WORK_DIR/log/pkg_comp_wrapper.log

SANDBOX=$WORK_DIR/sandbox
REBUILD_SUMMARY=$WORK_DIR/bin/rebuild_pkg_summary.sh

{
	flock -n 9 || (echo "unable to obtain lock; is a build already running?" >&2 && exit 1)

	PKG_COMP=/usr/pkg/sbin/pkg_comp
	PKGIN=/usr/pkg/bin/pkgin

	FAST=
	if [ $# -gt 0 ] && [ '-f' = "$1" ]; then
		FAST="$1"
		shift
	fi

	PKGLIST="$@"

	# do this early in case there's any problem loading it
	. ~/bin/util/pkg_comp_util.sh  # this will also grab util.sh

	# do this early in case there are any invalid package names in the list
	echo "Initializing package name cache and checking for errors..."
	if [ -n "$PKGLIST" ]; then
		# trick pkg_comp_util into using our shortened list
		TEMPFILE="`tempname`"
		echo "$PKGLIST" | tr ' ' "\n" > "$TEMPFILE"
		PKG_LIST="$TEMPFILE"
	fi
	_uncached_desired_package_name >/dev/null || die $?

	if test -z "$FAST" ; then
		echo "Destroying old sandbox (and ignoring errors)..."
		$PKG_COMP sandbox-destroy || true
	fi

	if ! test -d $SANDBOX ; then
		echo "Creating new sandbox..."
		$PKG_COMP sandbox-create || die $? "Error creating sandbox"
	fi

	echo "Building..."
	$PKG_COMP auto $FAST $PKGLIST || die $? "Error during 'auto' build"

	echo "Checking that all desired packages exist..."
	_do_diff 'desired_package_names' 'current_package_files' || die $? "Some desired packages are missing"

	if test -z "$FAST" ; then
		echo "Destroying new sandbox..."
		$PKG_COMP sandbox-destroy || die $? "Error destroying sandbox"
	fi

	echo "Fixing pkg_summary..."
	$REBUILD_SUMMARY || die $? "Error running $REBUILD_SUMMARY"

	echo "Running 'pkgin update'..."
	$PKGIN update || die $? "Error running 'pkgin update'"

} 2>&1 9>/tmp/pkg_comp_wrapper.flock | tee $LOG

echo "Done!"
exit 0
