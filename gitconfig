# Reference this file from your ~/.gitconfig like so:
#[include]
#	path = path/to/this/file

[user]
	name = Nathan Arthur
# set this in your ~/.gitconfig
#	email = your@email

[alias]
	branches = branch -a
	# reset the working directory to exactly what it would be if you had just cloned
	cleanall = clean -d -x -f
	# summarize contributors and commit count
	contributors = shortlog --summary --numbered
	# awesome way to view commit history
	graph = log --color --graph --all --pretty=format':%C(yellow)%h%Cred%d%Creset %s %Cgreen %an, %ar%Creset'
	# from http://stackoverflow.com/questions/1527234/finding-a-branch-point-with-git
	oldest-ancestor = !bash -c 'diff --old-line-format= --new-line-format= <(git rev-list --first-parent \"${1:-master}\") <(git rev-list --first-parent \"${2:-HEAD}\") | head -1' -
	# I just always work on master, and retroactively move work to a branch if needed
	master-to-new-branch = "!master-to-new-branch"
	prune-stale-branches = remote prune origin
	remotes = remote -v
	# find a commit that changes a particular bit of code
	#search = "!f() { git log -p -G\"$1\" --diff-filter=M ; }; f"
	search = "!f() { git log -p -G\"$1\" -i ; }; f"
	st = status -s
	stashpull = "!f() { git stash && git pull && git stash pop ; }; f"
	tags = tag -l
	undo-commit = reset --soft HEAD^
	wdiff = diff --color-words
	wshow = show --color-words

[branch]
	autosetuprebase = always

[color]
	ui = true
[color "diff"]
	meta = yellow

[core]
# uncomment these on windows
#	autocrlf = true
#	fscache = true
	excludesfile = ~/.gitignore
	longpaths = true
	pager = less -i

	# Make `git rebase` safer on OS X
	# More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
	trustctime = false

	# Prevent showing files whose names contain non-ASCII symbols as unversioned (on OSX).
	# http://michael-kuehnel.de/git/2014/11/21/git-mac-osx-and-german-umlaute.html
	precomposeunicode = false

# pick one of these, depending on OS
#[credential]
#	helper = cache
#	helper = osxkeychain
#	helper = wincred

[merge]
	# Include summaries of merged commits in newly created merge commit messages
	log = true
	tool = vimdiff

[pull]
	rebase = true

[push]
	default = current

# also see https://github.com/git/git/blob/master/contrib/rerere-train.sh
[rerere]
	enabled = true

